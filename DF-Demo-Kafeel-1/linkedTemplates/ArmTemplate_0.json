{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-Demo-Kafeel-1"
		},
		"linked_serv_demo_kafeel_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linked_serv_demo_kafeel'"
		},
		"ls_demo_kafeel_dynamic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_demo_kafeel_dynamic'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"poc_sql_server_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'poc_sql_server_ls'"
		},
		"EventDemoTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/457145b1-eda5-41ea-945b-f9e3585b8deb/resourceGroups/RG_Demo_Kafeel/providers/Microsoft.Storage/storageAccounts/demosakafeel"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://poc1demosagen2.dfs.core.windows.net"
		},
		"poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_servername": {
			"type": "string",
			"defaultValue": "demokafeel.database.windows.net"
		},
		"poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_dbname": {
			"type": "string",
			"defaultValue": "POC_Demo"
		},
		"poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_username": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_password": {
			"type": "string",
			"defaultValue": "Password@123"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EventDemoTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adfdemo/blobs/input/xinput/HourlySales.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('EventDemoTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_serv_demo_kafeel')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linked_serv_demo_kafeel_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_demo_kafeel_dynamic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_demo_kafeel_dynamic_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_Demo_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_serv_demo_kafeel",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "demo_data.txt",
						"folderPath": "input",
						"container": "adfdemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_serv_demo_kafeel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputDemoForEach')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_serv_demo_kafeel",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().folderName",
							"type": "Expression"
						},
						"container": "adfdemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_serv_demo_kafeel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output_demo_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_serv_demo_kafeel",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "out_demo.txt",
						"folderPath": "output",
						"container": "adfdemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_serv_demo_kafeel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkCSVDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_serv_demo_kafeel",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_serv_demo_kafeel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourceCSVDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_serv_demo_kafeel",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employeeDetails.csv",
						"folderPath": "input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "dept",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_serv_demo_kafeel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/poc_sql_server_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('poc_sql_server_ls_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceTableDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "poc_sql_server_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": "demokafeel.database.windows.net",
						"dbName": "POC_Demo",
						"userName": "sqladmin",
						"password": "Password@123"
					}
				},
				"parameters": {
					"sourceSchema": {
						"type": "string"
					},
					"sourceTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().sourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().sourceTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/poc_sql_server_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookupInputTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "poc_sql_server_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": {
							"value": "@dataset().servName",
							"type": "Expression"
						},
						"dbName": {
							"value": "@dataset().dbName",
							"type": "Expression"
						},
						"userName": {
							"value": "@dataset().userName",
							"type": "Expression"
						},
						"password": {
							"value": "@dataset().password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"servName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/poc_sql_server_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/poc_output_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"baseDirectoryName": {
						"type": "string"
					},
					"directoryName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().fileName,'_',formatDateTime(utcnow()))",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().baseDirectoryName,'/',dataset().directoryName)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/POC_Part1_Data_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "listOfInputTablesLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select SourcePath,SourceTableName,DestinationBaseDir,DestinationDirectory,DestinationFileName from dbo.Info_lookup",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookupInputTables",
								"type": "DatasetReference",
								"parameters": {
									"servName": {
										"value": "@pipeline().parameters.gb_servername",
										"type": "Expression"
									},
									"dbName": {
										"value": "@pipeline().parameters.gb_dbname",
										"type": "Expression"
									},
									"userName": {
										"value": "@pipeline().parameters.gb_username",
										"type": "Expression"
									},
									"password": {
										"value": "@pipeline().parameters.gb_password",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "loop_through_table_names",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "listOfInputTablesLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('listOfInputTablesLookup').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "Copy table data to ADLS Gen2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "SalesLT.@{item()}"
										},
										{
											"name": "Destination",
											"value": "raw//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceTableDS",
											"type": "DatasetReference",
											"parameters": {
												"sourceSchema": {
													"value": "@item().SourcePath",
													"type": "Expression"
												},
												"sourceTableName": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "poc_output_dataset",
											"type": "DatasetReference",
											"parameters": {
												"baseDirectoryName": {
													"value": "@item().DestinationBaseDir",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@item().DestinationDirectory",
													"type": "Expression"
												},
												"fileName": {
													"value": "item().DestinationFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"gb_servername": {
						"type": "string"
					},
					"gb_dbname": {
						"type": "string"
					},
					"gb_username": {
						"type": "string"
					},
					"gb_password": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookupInputTables')]",
				"[concat(variables('factoryId'), '/datasets/SourceTableDS')]",
				"[concat(variables('factoryId'), '/datasets/poc_output_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "listOfInputTablesLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select SourcePath,SourceTableName,DestinationBaseDir,DestinationDirectory,DestinationFileName from dbo.Info_lookup",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookupInputTables",
								"type": "DatasetReference",
								"parameters": {
									"servName": {
										"value": "@pipeline().parameters.gb_servername",
										"type": "Expression"
									},
									"dbName": {
										"value": "@pipeline().parameters.gb_dbname",
										"type": "Expression"
									},
									"userName": {
										"value": "@pipeline().parameters.gb_username",
										"type": "Expression"
									},
									"password": {
										"value": "@pipeline().parameters.gb_password",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"parameters": {
					"gb_servername": {
						"type": "string"
					},
					"gb_dbname": {
						"type": "string"
					},
					"gb_username": {
						"type": "string"
					},
					"gb_password": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookupInputTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/poctriggerdatacopy')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "POC_Part1_Data_Ingestion",
							"type": "PipelineReference"
						},
						"parameters": {
							"gb_servername": "[parameters('poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_servername')]",
							"gb_dbname": "[parameters('poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_dbname')]",
							"gb_username": "[parameters('poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_username')]",
							"gb_password": "[parameters('poctriggerdatacopy_properties_POC_Part1_Data_Ingestion_parameters_gb_password')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-08-19T06:45:00",
						"endTime": "2021-08-22T06:45:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/POC_Part1_Data_Ingestion')]"
			]
		}
	]
}